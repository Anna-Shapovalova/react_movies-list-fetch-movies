{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","useState","setQuery","setMovie","isLoading","setIsLoading","hasError","setHasError","handleSubmit","event","a","preventDefault","trim","newMovie","Poster","Title","Plot","imdbID","clearForm","useCallback","addMovie","isNotNewMovie","some","prevMovie","handleQuery","target","value","onSubmit","htmlFor","type","id","placeholder","onChange","classNames","disabled","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be21d68e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5c96abad';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (movies: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasError, setHasError] = useState<boolean>(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setHasError(false);\n\n    try {\n      const newMovie = await getMovie(query.trim());\n\n      if ('Error' in newMovie) {\n        setHasError(true);\n      } else {\n        const {\n          Poster,\n          Title,\n          Plot,\n          imdbID,\n        } = newMovie;\n\n        // eslint-disable-next-line max-len\n        const defaultPicture = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n        const imgUrl = Poster !== 'N/A'\n          ? Poster\n          : defaultPicture;\n\n        const imdbUrl = `https://www.imdb.com/title/${imdbID}`;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl,\n          imdbUrl,\n          imdbId: imdbID,\n        });\n      }\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearForm = useCallback(() => {\n    setQuery('');\n    setMovie(null);\n    setIsLoading(false);\n    setHasError(false);\n  }, []);\n\n  const addMovie = useCallback(() => {\n    const isNotNewMovie = movies\n      .some(prevMovie => prevMovie.imdbId === movie?.imdbId);\n\n    if (isNotNewMovie) {\n      clearForm();\n    }\n\n    if (!isNotNewMovie && movie) {\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n    }\n\n    clearForm();\n  }, [movie, movies]);\n\n  const handleQuery = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setQuery(event.target.value);\n      setHasError(false);\n    }, [query],\n  );\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query}\n            >\n              {!movie\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}